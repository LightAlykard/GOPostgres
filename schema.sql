-- база данных браузерной игры, на развитие города, город сам развивается,
-- пользователь только только распределяет жителей по специальности, жители сами строят здания,
-- в зависимости от соотношения специальностей в городе они тратят ресурсы
-- каждый ход в зависимости от развития и сооношения типов население город лучше или хуже справляется с определенными событиями
-- 3 таблицы, первая это типы строений в игре и их характеристики
-- вторая пользователи с их прогрессом, то есть их ресурсы, население, уровень развития, прирост средсв за ход,
-- % распределения средст населения на направление постройки
-- третья с координатами строений ползователей на их личных картах
-- milit сокращение от military, med от medicine, manag от managment

DROP TABLE IF EXISTS bildings CASCADE;
create table bildings (
    id_bild int generated by default as identity,
    build_name varchar(24) UNIQUE CHECK(build_name !=''),
    cost int not null,
    milit_boost int not null,
    med_boost int not null,
    manag_boost int not null,
    people_boost int not null,
    CONSTRAINT bildings_id_pkey PRIMARY KEY (id_bild)
);

DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE IF NOT EXISTS users (
    id_user INTEGER generated BY DEFAULT AS IDENTITY,
    user_name varchar(24) UNIQUE CHECK(user_name !=''),
    score int not null,
    money_sum int not null,
    money_per_turn int not null,
    people_all int not null,
    people_per_turn int not null,
    people_free int not null,
    people_milit int not null,
    people_med int not null,
    people_manag int not null,
    milit_sum_boost int not null,
    med_sum_boost int not null,
    manag_sum_boost int not null,
    CONSTRAINT users_id_pkey PRIMARY KEY (id_user)
);

DROP TABLE IF EXISTS maps CASCADE;
CREATE TABLE IF NOT EXISTS maps (
    id_map int generated by default as identity,
    user_id int not null,
    bilding_id int not null,
    xCoord int not null,
    yCoord int not null,
    CONSTRAINT maps_id_pkey PRIMARY KEY (id_map),
    CONSTRAINT maps_fk_user_id FOREIGN KEY (user_id) REFERENCES users (id_user) ON DELETE RESTRICT,
    CONSTRAINT maps_fk_bilding_id FOREIGN KEY (bilding_id) REFERENCES bildings (id_bild) ON DELETE RESTRICT
);

DROP TABLE IF EXISTS events CASCADE;
CREATE TABLE IF NOT EXISTS events (
    id_event int generated by default as identity,
    ev_name varchar(24) UNIQUE CHECK(ev_name !=''),
    ev_comment text not null,
    ev_money int not null,
    ev_people int not null,
    ev_milit int not null,
    ev_med int not null,
    ev_manag int not null,   
    ev_bild int not null,
    CONSTRAINT events_id_pkey PRIMARY KEY (id_event)
);

DROP TABLE IF EXISTS eventUsers CASCADE;
CREATE TABLE IF NOT EXISTS eventUsers (
    id_evUs int generated by default as identity,
    user_id int not null,
    event_id int not null,
    milit_lost int not null,
    med_lost int not null,
    manag_lost int not null,
    money_lost int not null,
    people_lost int not null,
    idBild_lost int not null,
    CONSTRAINT eventUsers_id_pkey PRIMARY KEY (id_evUs),
    constraint evUs_fk_user_id foreign key (user_id) references users (id_user),
    constraint evUs_fk_event_id foreign key (event_id) references events (id_event)
);
