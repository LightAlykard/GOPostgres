-- база данных браузерной игры, на развитие города, город сам развивается,
-- пользователь только только распределяет жителей по специальности, жители сами строят здания,
-- в зависимости от соотношения специальностей в городе они тратят ресурсы
-- каждый ход в зависимости от развития и сооношения типов население город лучше или хуже справляется с определенными событиями
-- 3 таблицы, первая это типы строений в игре и их характеристики
-- вторая пользователи с их прогрессом, то есть их ресурсы, население, уровень развития, прирост средсв за ход,
-- % распределения средст населения на направление постройки
-- третья с координатами строений ползователей на их личных картах
-- milit сокращение от military, med от medicine, manag от managment

create table bildings (
    id_bild int generated by default as identity,
    build_name varchar(24) UNIQUE CHECK(build_name !=''),
    cost int not null,
    milit_boost int not null,
    med_boost int not null,
    manag_boost int not null,
    people_boost int not null,
);

create table users (
    id_user int generated by default as identity,
    user_name varchar(24) UNIQUE CHECK(user_name !=''),
    score int not null,
    money_sum int not null,
    money_per_turn int not null,
    people_all int not null,
    people_per_turn not null,
    people_free int not null,
    people_milit int not null,
    people_med int not null,
    people_manag int not null,
    milit_sum_boost int not null,
    med_sum_boost int not null,
    manag_sum_boost int not null,
);

create table maps (
    id_map int generated by default as identity,
    user_id int not null,
    bilding_id int not null,
    xCoord int not null,
    yCoord int not null,
    constraint maps_fk_user_id foreign key (user_id) references users (id_user) on delete restrict
    constraint maps_fk_bilsing_id foreign key (bilding_id) references bildings (id_bild) on delete restrict
);

create table events (
    id_event int generated by default as identity,
    ev_name varchar(24) UNIQUE CHECK(user_name !=''),
    ev_comment text not null,
    ev_money int not null,
    ev_people int not null,
    ev_milit int not null,
    ev_med int not null,
    ev_manag int not null,   
    ev_bild int not null,
)

create table eventUsers (
    id_evUs int generated by default as identity,
    user_id int not null,
    event_id int not null,
    milit_lost int not null,
    med_lost int not null,
    manag_lost int not null,
    money_lost int not null,
    people_lost int not null,
    idBild_lost int not null,
    constraint evUs_fk_user_id foreign key (user_id) references users (id_user)
    constraint evUs_fk_event_id foreign key (event_id) references events (id_event)
);